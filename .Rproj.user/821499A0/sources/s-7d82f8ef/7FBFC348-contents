library(stringr)
library(dplyr)
library(readxl)

## Codigueras productos
# Codiguera que se utiliza en proyecto Internacionalización
NCM <- readRDS("~/../vburguete/Trabajos/Internacionalizacion/data/internas/ncm.rds") %>% 
  transmute(ncm_4 = as.character(codigo),
            descripcionNCM = descripcion) %>% 
  mutate(ncm_4 = case_when(nchar(ncm_4)==3 ~ paste("0", ncm_4, sep = ""), 
                           TRUE ~ ncm_4), 
         capitulo = substring(ncm_4, 1, 2))

# Codiguera disponible en databases/ine/EAAE/2012/sen/producto
source('~/repositorio_info_2/codigueras/ncm.R')
codiguera_ncm_eaae <- cargar_ncm() %>% 
  transmute(codigo,
            ncm_4 = str_sub(codigo, 1, 4),
            ncm_6 = str_sub(codigo, 1, 6),
            capitulo = str_sub(codigo, 1, 2),
            descripcion_ncm = descripcion)

# Codiguera de grupos según clasificación de Uruguay XXI
source('~/repositorio_info_2/codigueras/clasif_uyxxi.R')
codiguera_uyxxi <- clasif.uyxxi() %>% 
  mutate(capitulo = substring(ncm_4, 1, 2))

# Codiguera BCU: productos bcu y su correspondiente producto ncm
cnbcu_ncm <- function(){
  file.path('~', 'datos_repositorio', 'ncm', 'CNBCU_NCM.xls') %>% 
  read_excel(skip = 5) %>% 
  transmute(NCM_10 = `Códigos NCM 2007`, descripcion = `Descripción NCM 2007`) %>% 
  arrange(NCM_10)
}

# Listado de capitulos (NCM - anexo.pdf)
capitulos.productos <- tribble(
  ~capitulo,   ~descripcion.capitulo,      
  "01",        "Animales vivos",
  "02",        "Carne y despojos comestibles",
  "03",        "Pescados y crustáceos, moluscos y demás invertebrados acuáticos",
  "04",        "Leche y productos lácteos; huevos de ave; miel natural; productos comestibles de origen animal, no expresados ni comprendidos en otra parte",
  "05",        "Los demás productos de origen animal no expresados ni comprendidos en otra parte",
  "06",        "Plantas vivas y productos de la floricultura",
  "07",        "Hortalizas, plantas, raíces y tubérculos alimenticios",
  "08",        "Frutas y frutos comestibles; cortezas de agrios (cítricos), melones o sandías",
  "09",        "Café, té, yerba mate y especias",
  "10",        "Cereales",
  "11",        "Productos de la molinería; malta; almidón y fécula; inulina; gluten de trigo",
  "12",        "Semillas y frutos oleaginosos; semillas y frutos diversos; plantas industriales o medicinales; paja y forraje",
  "13",        "Gomas, resinas y demás jugos y extractos vegetales",
  "14",        "Materias trenzables y demás productos de origen vegetal, no expresados ni comprendidos en otra parte",
  "15",        "Grasas y aceites animales o vegetales; productos de su desdoblamiento; grasas alimenticias elaboradas; ceras de origen animal o vegetal",
  "16",        "Preparaciones de carne, pescado o de crustáceos, moluscos o demás invertebrados acuáticos",
  "17",        "Azúcares y artículos de confitería",
  "18",        "Cacao y sus preparaciones",
  "19",        "Preparaciones a base de cereales, harina, almidón, fécula o leche; productos de pastelería",
  "20",        "Preparaciones de hortalizas, frutas u otros frutos o demás partes de plantas",
  "21",        "Preparaciones alimenticias diversas",
  "22",        "Bebidas, líquidos alcohólicos y vinagre",
  "23",        "Residuos y desperdicios de las industrias alimentarias; alimentos preparados para animales",
  "24",        "Tabaco y sucedáneos del tabaco elaborados",
  "25",        "Sal; azufre; tierras y piedras; yesos, cales y cementos",
  "26",        "Minerales metalíferos, escorias y cenizas",
  "27",        "Combustibles minerales, aceites minerales y productos de su destilación; materias bituminosas; ceras minerales",
  "28",        "Productos químicos inorgánicos; compuestos inorgánicos u orgánicos de metal precioso, de elementos radiactivos, de metales de las tierras raras o de isótopos",
  "29",        "Productos químicos orgánicos",
  "30",        "Productos farmacéuticos",
  "31",        "Abonos",
  "32",        "Extractos curtientes o tintóreos; taninos y sus derivados; pigmentos y demás materias colorantes; pinturas y barnices; mástiques; tintas",
  "33",        "Aceites esenciales y resinoides; preparaciones de perfumería, de tocador o de cosmética",
  "34",        "Jabón, agentes de superficie orgánicos, preparaciones para lavar, preparaciones lubricantes, ceras artificiales, ceras preparadas, productos de limpieza, velas y artículos similares, pastas para modelar, «ceras para odontología» y preparaciones para odontología a base de yeso fraguable",
  "35",        "Materias albuminoideas; productos a base de almidón o de fécula modificados; colas; enzimas",
  "36",        "Pólvora y explosivos; artículos de pirotecnia; fósforos (cerillas); aleaciones pirofóricas; materias inflamables",
  "37",        "Productos fotográficos o cinematográficos",
  "38",        "Productos diversos de las industrias químicas",
  "39",        "Plástico y sus manufacturas",
  "40",        "Caucho y sus manufacturas",
  "41",        "Pieles (excepto la peletería) y cueros",
  "42",        "Manufacturas de cuero; artículos de talabartería o guarnicionería; artículos de viaje, bolsos de mano (carteras) y continentes similares; manufacturas de tripa",
  "43",        "Peletería y confecciones de peletería; peletería facticia o artificial",
  "44",        "Madera, carbón vegetal y manufacturas de madera",
  "45",        "Corcho y sus manufacturas",
  "46",        "Manufacturas de espartería o cestería",
  "47",        "Pasta de madera o de las demás materias fibrosas celulósicas; papel o cartón para reciclar (desperdicios y desechos)",
  "48",        "Papel y cartón; manufacturas de pasta de celulosa, de papel o cartón",
  "49",        "Productos editoriales, de la prensa y de las demás industrias gráficas; textos manuscritos o mecanografiados y planos",
  "50",        "Seda",
  "51",        "Lana y pelo fino u ordinario; hilados y tejidos de crin",
  "52",        "Algodón",
  "53",        "Las demás fibras textiles vegetales; hilados de papel y tejidos de hilados de papel",
  "54",        "Filamentos sintéticos o artificiales; tiras y formas similares de materia textil sintética o artificial",
  "55",        "Fibras sintéticas o artificiales discontinuas",
  "56",        "Guata, fieltro y tela sin tejer; hilados especiales; cordeles, cuerdas y cordajes; artículos de cordelería",
  "57",        "Alfombras y demás revestimientos para el suelo, de materia textil",
  "58",        "Tejidos especiales; superficies textiles con mechón insertado; encajes; tapicería; pasamanería; bordados",
  "59",        "Telas impregnadas, recubiertas, revestidas o estratificadas; artículos técnicos de materia textil",
  "60",        "Tejidos de punto",
  "61",        "Prendas y complementos (accesorios), de vestir, de punto",
  "62",        "Prendas y complementos (accesorios), de vestir, excepto los de punto",
  "63",        "Los demás artículos textiles confeccionados; juegos; prendería y trapos",
  "64",        "Calzado, polainas y artículos análogos; partes de estos artículos",
  "65",        "Sombreros, demás tocados y sus partes",
  "66",        "Paraguas, sombrillas, quitasoles, bastones, bastones asiento, látigos, fustas, y sus partes",
  "67",        "Plumas y plumón preparados y artículos de plumas o plumón; flores artificiales; manufacturas de cabello",
  "68",        "Manufacturas de piedra, yeso fraguable, cemento, amianto (asbesto), mica o materias análogas",
  "69",        "Productos cerámicos",
  "70",        "Vidrio y sus manufacturas",
  "71",        "Perlas finas (naturales)* o cultivadas, piedras preciosas o semipreciosas, metales preciosos, chapados de metal precioso (plaqué) y manufacturas de estas materias; bisutería; monedas",
  "72",        "Fundición, hierro y acero",
  "73",        "Manufacturas de fundición, hierro o acero",
  "74",        "Cobre y sus manufacturas",
  "75",        "Níquel y sus manufacturas",
  "76",        "Aluminio y sus manufacturas",
  "77",        "(Reservado para una futura utilización en el Sistema Armonizado)",
  "78",        "Plomo y sus manufacturas",
  "79",        "Cinc y sus manufacturas",
  "80",        "Estaño y sus manufacturas",
  "81",        "Los demás metales comunes; cermets; manufacturas de estas materias",
  "82",        "Herramientas y útiles, artículos de cuchillería y cubiertos de mesa, de metal común; partes de estos artículos, de metal común",
  "83",        "Manufacturas diversas de metal común",
  "84",        "Reactores nucleares, calderas, máquinas, aparatos y artefactos mecánicos; partes de estas máquinas o aparatos",
  "85",        "Máquinas, aparatos y material eléctrico, y sus partes; aparatos de grabación o reproducción de sonido, aparatos de grabación o reproducción de imagen y sonido en televisión, y las partes y accesorios de estos aparatos",
  "86",        "Vehículos y material para vías férreas o similares, y sus partes; aparatos mecánicos (incluso electromecánicos) de señalización para vías de comunicación",
  "87",        "Vehículos automóviles, tractores, velocípedos y demás vehículos terrestres; sus partes y accesorios",
  "88",        "Aeronaves, vehículos espaciales, y sus partes",
  "89",        "Barcos y demás artefactos flotantes",
  "90",        "Instrumentos y aparatos de óptica, fotografía o cinematografía, de medida, control o precisión; instrumentos y aparatos medicoquirúrgicos; partes y accesorios de estos instrumentos o aparatos",
  "91",        "Aparatos de relojería y sus partes",
  "92",        "Instrumentos musicales; sus partes y accesorios",
  "93",        "Armas, municiones, y sus partes y accesorios",
  "94",        "Muebles; mobiliario medicoquirúrgico; artículos de cama y similares; aparatos de alumbrado no expresados ni comprendidos en otra parte; anuncios, letreros y placas indicadoras luminosos y artículos similares; construcciones prefabricadas",
  "95",        "Juguetes, juegos y artículos para recreo o deporte; sus partes y accesorios",
  "96",        "Manufacturas diversas",
  "97",        "Objetos de arte o colección y antigüedades",
  "98",        "(Reservado para usos particulares por las Partes contratantes)",
  "99",        "(Reservado para usos particulares por las Partes contratantes)"
)


# Listado de secciones (NCM - anexo.pdf)
secciones.productos <- tribble(
  ~seccion,   ~descripcion.seccion,      
1, "ANIMALES VIVOS Y PRODUCTOS DEL REINO ANIMAL",
2, "PRODUCTOS DEL REINO VEGETAL",
3, "GRASAS Y ACEITES ANIMALES O VEGETALES; PRODUCTOS DE SU DESDOBLAMIENTO; GRASAS ALIMENTICIAS ELABORADAS; CERAS DE ORIGEN ANIMAL O VEGETAL",
4, "PRODUCTOS DE LAS INDUSTRIAS ALIMENTARIAS; BEBIDAS, LÍQUIDOS ALCOHÓLICOS Y VINAGRE; TABACO Y SUCEDÁNEOS DEL TABACO ELABORADOS",
5, "PRODUCTOS MINERALES",
6, "PRODUCTOS DE LAS INDUSTRIAS QUÍMICAS O DE LAS INDUSTRIAS CONEXAS",
7, "PLÁSTICO Y SUS MANUFACTURAS; CAUCHO Y SUS MANUFACTURAS",
8, "PIELES, CUEROS, PELETERÍA Y MANUFACTURAS DE ESTAS MATERIAS; ARTÍCULOS DE TALABARTERÍA O GUARNICIONERÍA; ARTÍCULOS DE VIAJE, BOLSOS DE MANO (CARTERAS) Y CONTINENTES SIMILARES; MANUFACTURAS DE TRIPA",
9, "MADERA, CARBÓN VEGETAL Y MANUFACTURAS DE MADERA; CORCHO Y SUS MANUFACTURAS; MANUFACTURAS DE ESPARTERÍA O CESTERÍA",
10, "PASTA DE MADERA O DE LAS DEMÁS MATERIAS FIBROSAS CELULÓSICAS; PAPEL O CARTÓN PARA RECICLAR (DESPERDICIOS Y DESECHOS); PAPEL O CARTÓN Y SUS APLICACIONES",
11, "MATERIAS TEXTILES Y SUS MANUFACTURAS",
12, "CALZADO, SOMBREROS Y DEMÁS TOCADOS, PARAGUAS, QUITASOLES, BASTONES, LÁTIGOS, FUSTAS, Y SUS PARTES; PLUMAS PREPARADAS Y ARTÍCULOS DE PLUMAS; FLORES ARTIFICIALES; MANUFACTURAS DE CABELLO",
13, "MANUFACTURAS DE PIEDRA, YESO FRAGUABLE, CEMENTO, AMIANTO (ASBESTO), MICA O MATERIAS ANÁLOGAS; PRODUCTOS CERÁMICOS; VIDRIO Y SUS MANUFACTURAS",
14, "PERLAS FINAS (NATURALES)* O CULTIVADAS, PIEDRAS PRECIOSAS O SEMIPRECIOSAS, METALES PRECIOSOS, CHAPADOS DE METAL PRECIOSO (PLAQUÉ) Y MANUFACTURAS DE ESTAS MATERIAS; BISUTERÍA; MONEDAS",
15, "METALES COMUNES Y MANUFACTURAS DE ESTOS METALES ",
16, "MÁQUINAS Y APARATOS, MATERIAL ELÉCTRICO Y SUS PARTES; APARATOS DE GRABACIÓN O REPRODUCCIÓN DE SONIDO, APARATOS DE GRABACIÓN O REPRODUCCIÓN DE IMAGEN Y SONIDO EN TELEVISIÓN, Y LAS PARTES Y ACCESORIOS DE ESTOS APARATOS",
17, "MATERIAL DE TRANSPORTE ",
18, "INSTRUMENTOS Y APARATOS DE ÓPTICA, FOTOGRAFÍA O CINEMATOGRAFÍA, DE MEDIDA, CONTROL O PRECISIÓN; INSTRUMENTOS Y APARATOS MEDICOQUIRÚRGICOS; APARATOS DE RELOJERÍA; INSTRUMENTOS MUSICALES; PARTES Y ACCESORIOS DE ESTOS INSTRUMENTOS O APARATOS",
19, "ARMAS, MUNICIONES, Y SUS PARTES Y ACCESORIOS",
20, "MERCANCÍAS Y PRODUCTOS DIVERSOS",
21, "OBJETOS DE ARTE O COLECCIÓN Y ANTIGÜEDADES") %>% 
  mutate(seccion = as.roman(seccion))


# Función para asignar sección de acuerdo a "NCM - anexo.pdf"
asigna.seccion <- function(df){
    df %>%
      mutate(seccion = 
               if_else(as.numeric(capitulo) %in% 1:5, as.roman(1),
               if_else(as.numeric(capitulo) %in% 6:14, as.roman(2), 
               if_else(as.numeric(capitulo) == 15, as.roman(3),
               if_else(as.numeric(capitulo) %in% 16:24, as.roman(4),
               if_else(as.numeric(capitulo) %in% 25:27, as.roman(5),
               if_else(as.numeric(capitulo) %in% 28:38, as.roman(6),
               if_else(as.numeric(capitulo) %in% 39:40, as.roman(7), 
               if_else(as.numeric(capitulo) %in% 41:43, as.roman(8), 
               if_else(as.numeric(capitulo) %in% 44:46, as.roman(9),
               if_else(as.numeric(capitulo) %in% 47:49, as.roman(10),
               if_else(as.numeric(capitulo) %in% 50:63, as.roman(11),
               if_else(as.numeric(capitulo) %in% 64:67, as.roman(12),
               if_else(as.numeric(capitulo) %in% 68:70, as.roman(13),
               if_else(as.numeric(capitulo) == 71, as.roman(14),
               if_else(as.numeric(capitulo) %in% 72:83, as.roman(15),
               if_else(as.numeric(capitulo) %in% 84:85, as.roman(16),
               if_else(as.numeric(capitulo) %in% 86:89, as.roman(17),
               if_else(as.numeric(capitulo) %in% 90:92, as.roman(18),
               if_else(as.numeric(capitulo) == 93, as.roman(19),
               if_else(as.numeric(capitulo) %in% 94:96, as.roman(20),
               as.roman(21))
               ))))))))))))))))))))
}


# Asignar sección y descripción a cada producto
NCM <- NCM %>% 
  asigna.seccion() %>% 
  left_join(secciones.productos, by = "seccion")

capitulos.productos <- capitulos.productos %>% 
  asigna.seccion() %>% 
  left_join(secciones.productos, by = "seccion")


# Genera df completo de productos - Clasificación TU (interna)
productos.tu <- function(){
  codiguera_uyxxi %>% 
  full_join(NCM, by = c("ncm_4", "capitulo")) %>% 
  left_join(capitulos.productos, by = c("capitulo", "seccion", "descripcion.seccion")) %>% 
  mutate(clasif.tu = case_when((is.na(desc.uyxxi) == TRUE & capitulo == "01") ~ "Los demás animales vivos",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "04") ~ "Los demás productos comestibles de origen animal",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "05") ~ "Los demás productos de origen animal",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "10" & ncm_4 %in% c("1002", "1004")) ~ descripcionNCM,
                               (is.na(desc.uyxxi) == TRUE & capitulo == "10" & ncm_4 %in% c("1007", "1008")) ~ "Los demás cereales",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "11") ~ "Los demás productos de molinería",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "12") ~ "Las demás semillas y frutos oleaginosos",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "13") ~ "Los demás jugos y extractos vegetales",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "14") ~ "Los demás productos de origen vegetal",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "15" & !ncm_4 %in% c("1502", "1505")) ~ "Margarina y aceites",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "16") ~ "Preparaciones de carne, pescado o de crustáceos, moluscos o demás invertebrados acuáticos",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "19") ~ "Los demás productos de pastelería",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "22") ~ "Las demás bebidas, líquidos alcohólicos y/o vinagre",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "23") ~ "Residuos y desperdicios de las industrias alimentarias",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "27") ~ "Combustibles minerales, aceites minerales y productos de su destilación",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "28") ~ "Productos químicos inorgánicos",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "33") ~ "Aceites esenciales y resinoides",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "35") ~ "Materias albuminoideas",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "36") ~ "Pólvora y explosivos",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "47") ~ "Pasta de madera o de las demás materias fibrosas celulósicas",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "49") ~ "Productos editoriales, de la prensa y de las demás industrias gráficas",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "53") ~ "Las demás fibras textiles vegetales",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "54") ~ "Filamentos sintéticos o artificiales", 
                               (is.na(desc.uyxxi) == TRUE & as.numeric(capitulo) %in% c(56:65) & !ncm_4 %in% c("5903", "6304")) ~ "Las demás telas impregnadas, recubiertas, revestidas o estratificadas",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "67") ~ "Plumas y plumón preparados y artículos de plumas o plumón",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "81") ~ "Los demás metales comunes",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "82") ~ "Herramientas y útiles de metal común",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "84") ~ "Reactores nucleares, calderas, máquinas, aparatos y artefactos mecánicos",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "85") ~ "Máquinas, aparatos y material eléctrico, y sus partes",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "86") ~ "Vehículos y material para vías férreas o similares, y sus partes",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "87") ~ "Vehículos automóviles, tractores, velocípedos y demás vehículos terrestres",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "90") ~ "Instrumentos y aparatos de óptica, fotografía o cinematografía, de medida, control o precisión",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "92") ~ "Instrumentos musicales",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "94") ~ "Muebles",
                               (is.na(desc.uyxxi) == TRUE & capitulo == "95") ~ "Juguetes, juegos y artículos para recreo o deporte",
                               (is.na(desc.uyxxi) == TRUE) ~ descripcion.capitulo, 
                               TRUE ~ desc.uyxxi)) %>% 
    mutate(clasif.tu = case_when(ncm_4 == "4703" ~ "Celulosa",
                                 ncm_4 %in% c("2106", "3302") ~ "Concentrado de bebidas",
                                 clasif.tu == "Despojos y subproductos cárnicos (bovinos principalmente)" ~ "Despojos y subproductos cárnicos",
                                 TRUE ~ clasif.tu)) %>% 
  transmute(seccion, capitulo, ncm_4, ncm_6, clasif.tu)
}

# Asigna grupo de clasificación TU
asigna.grupo <- function(df){
  df %>%
    left_join(productos.tu() %>%                                                 # primero: 6 dígitos
                mutate(seccion = as.character(seccion)) %>% 
                transmute(ncm_6, clasif.tu.6 = clasif.tu) %>%
                unique,
              by = c("ncm_6")) %>%
    left_join(productos.tu() %>%
                mutate(seccion = as.character(seccion)) %>% 
                transmute(ncm_4, clasif.tu.4 = clasif.tu) %>%            # segundo: 4 dígitos
                unique,
              by = c("ncm_4")) %>%
    left_join(productos.tu() %>%
                mutate(seccion = as.character(seccion)) %>% 
                transmute(capitulo, clasif.tu.2 = clasif.tu) %>%                 # último: 2 dígitos
                unique,
              by = "capitulo") %>%
    mutate(clasif.tu = case_when((is.na(clasif.tu.6) == TRUE & is.na(clasif.tu.4) == TRUE) ~ clasif.tu.2,
                                 is.na(clasif.tu.6) == TRUE ~ clasif.tu.4,
                                 TRUE ~ clasif.tu.6)) %>%
    select(-clasif.tu.2, -clasif.tu.4, -clasif.tu.6) %>%
    unique
}


# Codiguera completa (Sección, Capítulo, Partida, Subpartida) - archivo de la web en formato .xls que coincide con NCM adaptado a Uruguay.
ncm_base <- file.path('~', 'datos_repositorio', 'ncm', 'ncm_5.xls') %>% 
  read_excel(skip = 2) %>% rename_at(1:2, ~c('NCM', 'descripcion')) %>% 
  filter(is.na(descripcion) != TRUE) %>% 
  mutate(codigo = str_replace_all(NCM, pattern = '\\.', '')) %>% 
  mutate(n = nchar(codigo)) %>% 
  mutate(variable = if_else(NCM %in% as.character(as.roman(1:21)), 'seccion',
                            if_else(n == 2, 'capitulo',
                                    if_else(n == 4, 'ncm_4',
                                            if_else(n == 5, 'ncm_5',
                                                    if_else(n == 6, 'ncm_6',
                                                            if_else(n == 7, 'ncm_7', 'ncm_8')))))))


# Genero dataset intermedios para armar la codiguera completa
ncm_base.seccion <- ncm_base %>% filter(variable == 'seccion') %>% 
  transmute(seccion = codigo, desc.secc = descripcion)
ncm_base.capitulo <- ncm_base %>% filter(variable == 'capitulo') %>% 
  transmute(capitulo = codigo, desc.cap = descripcion)
ncm_base.ncm_4 <- ncm_base %>% filter(variable == 'ncm_4') %>% 
  transmute(ncm_4 = codigo, desc.ncm_4 = descripcion)
ncm_base.ncm_5 <- ncm_base %>% filter(variable == 'ncm_5') %>% 
  transmute(ncm_5 = codigo, desc.ncm_5 = descripcion)
ncm_base.ncm_6 <- ncm_base %>% filter(variable == 'ncm_6') %>% 
  transmute(ncm_6 = codigo, desc.ncm_6 = descripcion)
ncm_base.ncm_7 <- ncm_base %>% filter(variable == 'ncm_7') %>% 
  transmute(ncm_7 = codigo, desc.ncm_7 = descripcion)
ncm_base.ncm_8 <- ncm_base %>% filter(variable == 'ncm_8') %>% 
  transmute(ncm_8 = codigo, desc.ncm_8 = descripcion)


# Incorporo los datasets generados en una única codiguera
codiguera_ncm_df <- function(){
  ncm_base.ncm_8 %>% mutate(ncm_7 = str_sub(ncm_8, 1, 7)) %>% 
    left_join(ncm_base.ncm_7, by = 'ncm_7') %>% mutate(ncm_6 = str_sub(ncm_7, 1, 6)) %>% 
    left_join(ncm_base.ncm_6, by = 'ncm_6') %>% mutate(ncm_5 = str_sub(ncm_6, 1, 5)) %>% 
    left_join(ncm_base.ncm_5, by = 'ncm_5') %>% mutate(ncm_4 = str_sub(ncm_5, 1, 4)) %>% 
    left_join(ncm_base.ncm_4, by = 'ncm_4') %>% mutate(capitulo = str_sub(ncm_4, 1, 2)) %>% 
    left_join(ncm_base.capitulo, by = 'capitulo') %>% asigna.seccion() %>% 
    mutate(seccion = as.character(seccion)) %>% 
    left_join(ncm_base.seccion, by = 'seccion') %>% 
    transmute(seccion, desc.secc, capitulo, desc.cap, ncm_4, desc.ncm_4, ncm_5, 
              desc.ncm_5, ncm_6, desc.ncm_6, ncm_7, desc.ncm_7, ncm_8, desc.ncm_8)
}
remove(ncm_base.seccion, ncm_base.capitulo, ncm_base.ncm_4, ncm_base.ncm_5, ncm_base.ncm_6, ncm_base.ncm_7, ncm_base.ncm_8)


## Hay algunas diferencias, se crea función para tener las descripciones correctas
# Función para cargar codiguera completa:
# FORMATO WIDE
# -------------------------------------------------------------------------------------------------------------------------------------------------------------------
# seccion      desc.secc    capitulo      desc.cap    ncm_4    desc.ncm_4    ncm_5   desc.ncm_5     ncm_6    desc.ncm_6    ncm_7    desc.ncm_7    ncm_8    desc.ncm_8
# -------------------------------------------------------------------------------------------------------------------------------------------------------------------
#       I    Animales...          01   Animales...     0101           ...    01012          ...    010121           ...   0101210         ...  01012100           ...  
#      II   Productos...          06    Plantas...     0601           ...    06011          ...    060110           ...   0601100         ...  06011000           ...
# -------------------------------------------------------------------------------------------------------------------------------------------------------------------
codiguera_ncm_wide <- function(){
  ncm_base %>%
    filter(variable == 'ncm_8') %>%                                                                # Empieza por mayor desagregación ncm a 8 dígitos 
    transmute(ncm_8 = codigo, desc.ncm_8 = descripcion) %>% 
    mutate(ncm_7 = str_sub(ncm_8, 1, 7)) %>% 
    
    left_join(
      ncm_base %>% 
        filter(variable == 'ncm_7') %>%                                                            # Agrega ncm a 7 dígitos 
        transmute(ncm_7 = codigo, desc.ncm_7 = descripcion), 
      by = 'ncm_7') %>% 
    mutate(ncm_6 = str_sub(ncm_7, 1, 6)) %>% 
    
    left_join(
      ncm_base %>% 
        filter(variable == 'ncm_6') %>%                                                            # Agrega ncm a 6 dígitos 
        transmute(ncm_6 = codigo, desc.ncm_6 = descripcion), 
      by = 'ncm_6') %>% 
    mutate(ncm_5 = str_sub(ncm_6, 1, 5)) %>% 
    
    left_join(
      ncm_base %>% 
        filter(variable == 'ncm_5') %>%                                                            # Agrega ncm a 5 dígitos 
        transmute(ncm_5 = codigo, desc.ncm_5 = descripcion), 
      by = 'ncm_5') %>% 
    mutate(ncm_4 = str_sub(ncm_5, 1, 4)) %>% 
    
    left_join(
      ncm_base %>% 
        filter(variable == 'ncm_4') %>%                                                            # Agrega ncm a 4 dígitos 
        transmute(ncm_4 = codigo, desc.ncm_4 = descripcion), 
      by = 'ncm_4') %>% 
    mutate(capitulo = str_sub(ncm_4, 1, 2)) %>% 
    
    left_join(capitulos.productos %>%                                                              # Agrega capítulo según df "capitulos.productos"
                transmute(capitulo, desc.cap = descripcion.capitulo), 
              by = "capitulo") %>% 
    
    # left_join(
    #   ncm_base %>%                                                                               # Agrega capítulo de la codiguera ncm_base
    #     filter(variable == 'capitulo') %>%
    #     transmute(capitulo = codigo, desc.cap = descripcion), 
    #   by = 'capitulo') %>% 
    
    asigna.seccion() %>% mutate(seccion = as.character(seccion)) %>%                               # Agrega sección según df "secciones.productos"
    left_join(secciones.productos %>% 
                mutate(seccion = as.character(seccion)) %>% 
                rename(desc.secc = descripcion.seccion), 
              by = "seccion") %>% 
    
    # left_join(
    #   ncm_base %>% 
    #     filter(variable == 'seccion') %>%                                                        # Agrega sección de la codiguera ncm_base
    #     transmute(seccion = codigo, desc.secc = descripcion), 
    #   by = 'seccion') %>% 
     
    transmute(seccion, desc.secc, capitulo, desc.cap, ncm_4, desc.ncm_4, ncm_5,                    # Ordena variables
              desc.ncm_5, ncm_6, desc.ncm_6, ncm_7, desc.ncm_7, ncm_8, desc.ncm_8) %>% 
    
    mutate(desc.cap = str_replace_all(desc.cap, pattern = "- ", ""),                               # elimina guiones de las descripciones de las partidas de 4, 5, 6, 7 y 8 dígitos
           desc.ncm_4 = str_replace_all(desc.ncm_4, pattern = "-+", ""),
           desc.ncm_5 = str_replace_all(desc.ncm_5, pattern = "-+", ""),
           desc.ncm_6 = str_replace_all(desc.ncm_6, pattern = "-+", ""),
           desc.ncm_7 = str_replace_all(desc.ncm_7, pattern = "-+", ""),
           desc.ncm_8 = str_replace_all(desc.ncm_8, pattern = "-+", "")) %>% 
    
    mutate(descripcion_completa = str_c(na.omit(desc.secc), ' - ', 
                                        na.omit(desc.cap), ' - ', 
                                        na.omit(desc.ncm_4), ' - ',
                                        na.omit(desc.ncm_5), ' - ', 
                                        na.omit(desc.ncm_6), ' - ',
                                        na.omit(desc.ncm_7), ' - ', 
                                        na.omit(desc.ncm_8), ' - ')) %>% 
    
    mutate(#desc.ncm_6 = case_when(str_detect(desc.ncm_5, pattern = ".*:$") == TRUE ~ 
           #                         str_c(desc.ncm_5, ' ', desc.ncm_6),
           #                       TRUE ~ desc.ncm_6),
           desc.ncm_7 = case_when(str_detect(desc.ncm_6, pattern = ".*:$") == TRUE ~               # a las descripciones que terminan con ":" le
                                    str_c(desc.ncm_6, ' ', desc.ncm_7),                            # agrega la descripción de la subpartida siguiente
                                  TRUE ~ desc.ncm_7),
           desc.ncm_5 = str_replace_all(desc.ncm_5, pattern = ":$", "")) %>%

    mutate(desc.ncm_7 = case_when(is.na(desc.ncm_7) == TRUE ~ desc.ncm_8, TRUE ~ desc.ncm_7),      # Completa descripciones faltantes
           desc.ncm_6 = case_when(is.na(desc.ncm_6) == TRUE ~ desc.ncm_7, TRUE ~ desc.ncm_6),
           desc.ncm_5 = case_when(is.na(desc.ncm_5) == TRUE ~ desc.ncm_6, TRUE ~ desc.ncm_5),
           desc.ncm_4 = case_when(is.na(desc.ncm_4) == TRUE ~ desc.ncm_5, TRUE ~ desc.ncm_4)) %>% #,
           # desc.cap = str_replace_all(desc.cap, ".*(?<=\\n).*", "")) %>%                         # elimina notas de la descripción de los capítulos (ncm_base)
    
    # mutate(patron = str_c("SECCIÓN ", seccion, "- "),                                            # depura descripción de secciones (ncm_base)
    #        desc.secc = str_replace_all(desc.secc, pattern = patron, "")) %>% 
    
    # mutate(patron = str_c("CAPÍTULO ", as.numeric(capitulo)),                                    # depura descripción de los capítulos (ncm_base)
    #        desc.cap = str_replace_all(desc.cap, pattern = patron, "")) %>% 
    
    mutate(patron = str_detect(desc.ncm_5, pattern = "^(D|d)e\\s.*"),                              # a las descripciones de las partidas de ncm a 5 
           desc.ncm_5 = case_when(patron == TRUE ~ str_c(desc.ncm_4, ' ', desc.ncm_5),             # dígitos que empiezan con "De/de" le agrega la 
                                  TRUE ~ desc.ncm_5)) %>%                                          # descripción de la partida anterior.
    
    select(-patron)
}



# FORMATO LONG
# -------------------------------------
# variable    codigo    descripcion
# -------------------------------------
#  seccion         I    Animales...
# capitulo        01    Animales...
# -------------------------------------
codiguera_ncm_long <- function(){
  codiguera_ncm_wide() %>%
    transmute(variable = "seccion", codigo = seccion, descripcion = desc.secc, by = capitulo) %>% 
    unique %>% 
    
    rbind(codiguera_ncm_wide() %>% 
            transmute(variable = "capitulo", codigo = capitulo, descripcion = desc.cap, by = ncm_4) %>%
            unique) %>% 
    
    rbind(codiguera_ncm_wide() %>% 
            transmute(variable = "ncm_4", codigo = ncm_4, descripcion = desc.ncm_4, by = ncm_5) %>%
            unique) %>% 
    
    rbind(codiguera_ncm_wide() %>% 
            transmute(variable = "ncm_5", codigo = ncm_5, descripcion = desc.ncm_5, by = ncm_6) %>%
            unique) %>% 
    
    rbind(codiguera_ncm_wide() %>% 
            transmute(variable = "ncm_6", codigo = ncm_6, descripcion = desc.ncm_6, by = ncm_7) %>%
            unique) %>% 
    
    rbind(codiguera_ncm_wide() %>% 
            transmute(variable = "ncm_7", codigo = ncm_7, descripcion = desc.ncm_7, by = ncm_8) %>%
            unique) %>% 
    
    rbind(codiguera_ncm_wide() %>% 
            transmute(variable = "ncm_8", codigo = ncm_8, descripcion = desc.ncm_8, by = NA) %>%
            unique)
}



