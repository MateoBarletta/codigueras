## Pestaña 1: Exportaciones de bienes
## Pestaña 2: Exportaciones por esfuerzo innovador
## Pestaña 3: Coeficiente exportador 
## Pestaña 4: Diversificación productos
## Pestaña 5: Diversificación destinos

# Cargo librerias
library(readxl)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(treemapify)
library(plotly)
library(DT)
library(janitor)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(shinyBS)

library(estilotu)
set_estilotu()

## Cargar datos y funciones
source('./src/data_funciones_app.R')

#################### Datos ####################

ncm <- readRDS("./data/ncm.rds") %>% mutate(codigo = as.character(codigo)) %>% 
  mutate(codigo = case_when(nchar(codigo)==3 ~ paste("0", codigo, sep = ""), TRUE ~ codigo))

# Exportaciones de bienes
exports <- readRDS("./data/base_export_final_group.rds") %>% 
  rename(pais_destino = pais) %>% 
  ungroup %>% 
  mutate(anio = as.character(anio),
         usd_mm = FOB/1000,
         EI = case_when(EI == "Alto" ~ "4. Alto",
                        EI == "Medio Alto" ~ "3. Medio Alto",
                        EI == "Medio Bajo" ~ "2. Medio Bajo",
                        EI == "Bajo" ~ "1. Bajo",
                        TRUE ~ "0. Sin clasificar")) %>% 
  group_by(anio) %>% do(mutate(., usd_mm_tot = sum(.$usd_mm))) %>% 
  mutate(prop = usd_mm / usd_mm_tot * 100)

# Coeficiente exportador
ce_anio <- file.path('.', 'data', 'coef_export_anio_global.rds') %>% read_rds


#tabla de ncm con descripcion
t_ncm <- exports %>% 
  ungroup %>% 
  select(ncm_4) %>%                                                 # solo los presentes en la base de exportaciones
  unique() %>%
  merge(ncm, by.x = "ncm_4", 
        by.y = "codigo", 
        all.x = T) %>%
  mutate(cod_desc = paste(ncm_4, descripcion, sep=" "))

anios <- sort(c(2010:2017), decreasing = TRUE)

apertura <- c("por producto", "por destino")

top <- c(5, 10, 20)
top_paises <- c(1:5)

producto <- t_ncm %>% select(cod_desc)
producto1 <- t_ncm %>% select(ncm_4)

#Replico para productos y anios
productos_todos <- c("Todos")
names(productos_todos) <- "ncm_4"
productos <- rbind(productos_todos, producto)

productos_ncm <- rbind(productos_todos, producto1)

anios_todos <- c("Todos")
names(anios_todos) <- "anio"
anios_t <- rbind(anios_todos, anios)

paises <- exports %>% group_by() %>% select(pais_destino) %>% arrange() %>% unique
paises_todos <- c("Todos")
names(paises_todos) <- "pais_destino"
paises_t <- rbind(paises_todos, paises)

categorias_ei <- c("4. Alto",  "3. Medio Alto", "2. Medio Bajo", "1. Bajo", "0. Sin clasificar")
                        
#################### Shiny Dashboard App ####################

## User Interface - UI
header <- dashboardHeader(title = NULL, titleWidth = 0)

sidebar <- dashboardSidebar(
  tags$head(tags$link(rel = "stylesheet", type = "text/css", href = "estilo.css")),
  width = 280,
  disable = FALSE,
  sidebarMenu(
    menuItem("Exportaciones de bienes", tabName = "exportaciones", icon = icon("line-chart", lib = "font-awesome")),
    menuItem("Exportaciones por esfuerzo innovador", tabName = "export_clasif", icon = icon("list", lib = "font-awesome")),
    menuItem("Coeficiente exportador", tabName = "coef_export", icon = icon("line-chart")),
    menuItem("Concentración de las exportaciones", tabName = "concent_eco", icon = icon("line-chart" , lib = "font-awesome")),
    menuItem("Diversificación de las exportaciones",  tabName = "divers_eco", icon = icon("list" , lib = "font-awesome")),
    menuItem("Acerca de", tabName = "AcercaDe", icon = icon("search", lib = "font-awesome"), startExpanded = TRUE,
             menuSubItem("Tratamiento de la base", tabName = "tratamiento", icon = icon("arrow-right", lib = "font-awesome")),
             menuSubItem("Listado productos", tabName = "desc_ncm", icon = icon("arrow-right", lib = "font-awesome")))
  ))


body <- dashboardBody(
  estilo_tu,
  tabItems(
    tabItem(tabName = "exportaciones",
            fluidRow(
              column(2,
                     br(), br(),
                     dropdown(
                       status = "warning", style = "bordered",
                       tooltip = tooltipOptions(title = "Click para seleccionar datos"),
                       icon = icon("filter", lib = "font-awesome"), 
                       label = "Selector datos",
                       selectInput('export1.1', '1. Seleccione producto:', choices = productos$cod_desc),
                       selectInput('export1.2', '2. Seleccione número de principales países:', choices = top_paises, selected = 5),
                       animate = animateOptions(
                         enter = animations$fading_entrances$fadeInLeftBig,
                         exit = animations$fading_exits$fadeOutRightBig)),
                     br(),
                     dropdown(
                       style = "bordered", status = "warning", 
                       tooltip = tooltipOptions(title = "Fuentes"),
                       icon = icon("book", lib = "font-awesome"),
                       tags$h5("Fuentes"),
                       uiOutput("fuentes.exports"),
                       animate = animateOptions(
                         enter = animations$fading_entrances$fadeInLeftBig,
                         exit = animations$fading_exits$fadeOutRightBig)),
                     br(),
                     dropdown(
                       style = "bordered", status = "warning", 
                       tooltip = tooltipOptions(title = "Unidades de medida"),
                       icon = icon("scale", lib = "glyphicon"),
                       tags$h5("Unidades de medida"),
                       uiOutput("unidades.exports"),
                       animate = animateOptions(
                         enter = animations$fading_entrances$fadeInLeftBig,
                         exit = animations$fading_exits$fadeOutRightBig)),
                     br(),
                     dropdown(
                       style = "bordered", status = "warning", 
                       icon = icon("cog", lib = "glyphicon"),
                       uiOutput("conf1"),
                       animate = animateOptions(
                         enter = animations$fading_entrances$fadeInLeftBig,
                         exit = animations$fading_exits$fadeOutRightBig))),
              column(10,
                     br(),
                     box(title = "Exportaciones anuales, total (USDMM)",
                         status = "primary",
                         uiOutput("nota.plot_export1.1"),
                         br(), br(),
                         plotlyOutput("plot_export1.1", height = 550,  width = "100%")),
                     box(title = "Exportaciones por principales países de destino (USDMM)",
                         status = "primary",
                         uiOutput("nota.plot_export1.2"),
                         plotlyOutput("plot_export1.2", height = 550, width = "100%")
                         )))),
              
     tabItem(tabName = "export_clasif",
             fluidRow(
               tabBox(title = "Exportaciones por esfuerzo innovador",
                      width = 12,
                      tabPanel(title = "Por producto",
                               column(2,
                                      br(), br(),
                                      dropdown(
                                        style = "bordered", status = "warning",
                                        tooltip = tooltipOptions(title = "Click para seleccionar datos"),
                                        icon = icon("filter", lib = "font-awesome"),
                                        label = "Selector datos", 
                                        selectInput('ei_prod1.0', '1. Seleccione producto:', choices = productos$cod_desc),
                                        pickerInput('ei_prod1.1', '2. Seleccione categoría de clasificación:',
                                                    choices = categorias_ei,
                                                    options = list(`actions-box` = TRUE,
                                                                   `deselect-all-text` = "Ninguna categoría",
                                                                   `select-all-text` = "Todas las categorías",
                                                                   `none-selected-text` = "Seleccione al menos una categoría de clasificación.",
                                                                   `selected-text-format` = "count > 4"),
                                                    selected = categorias_ei[1:length(categorias_ei)],
                                                    multiple = TRUE),
                                        sliderInput("ei_prod1.2", "3. Seleccione rango de años para visualizar en tabla de datos:",
                                                    min = 2010, max = 2017,
                                                    value = c(2010, 2017),
                                                    sep = ""),
                                        animate = animateOptions(
                                          enter = animations$fading_entrances$fadeInLeftBig,
                                          exit = animations$fading_exits$fadeOutRightBig)),
                                      br(),
                                      dropdown(
                                        style = "bordered", status = "warning", 
                                        tooltip = tooltipOptions(title = "Fuentes"),
                                        icon = icon("book", lib = "font-awesome"),
                                        tags$h5("Fuentes"),
                                        uiOutput("fuentes.ei_prod"),
                                        animate = animateOptions(
                                          enter = animations$fading_entrances$fadeInLeftBig,
                                          exit = animations$fading_exits$fadeOutRightBig)),
                                      br(),
                                      dropdown(
                                        style = "bordered", status = "warning", 
                                        tooltip = tooltipOptions(title = "Notas"),
                                        icon = icon("file-text", lib = "font-awesome"),
                                        tags$h4("Indicador Esfuerzo Innovador"),
                                        uiOutput("acerca_ei_prod"), 
                                        animate = animateOptions(
                                          enter = animations$fading_entrances$fadeInLeftBig,
                                          exit = animations$fading_exits$fadeOutRightBig)),
                                      br(),
                                      dropdown(
                                        style = "bordered", status = "warning", 
                                        icon = icon("cog", lib = "glyphicon"),
                                        uiOutput("conf2"),
                                        animate = animateOptions(
                                          enter = animations$fading_entrances$fadeInLeftBig,
                                          exit = animations$fading_exits$fadeOutRightBig))),
                               
                               column(10,
                                      br(),
                                      fluidRow(
                                        column(9,
                                               uiOutput("nota.tabla_ei_prod"))),
                                      fluidRow(
                                        column(2),
                                        column(8,
                                               plotlyOutput("plot_ei_prod",  height = 650,  width = "100%"),
                                               br())),
                                      fluidRow(
                                        column(2),
                                        column(8,
                                               dataTableOutput("tabla_ei_prod")))
                                      )),
                      
                      tabPanel(title = "Por destino",
                               column(2,
                                      br(), br(),
                                      dropdown(
                                        style = "bordered", status = "warning",
                                        tooltip = tooltipOptions(title = "Click para seleccionar datos"),
                                        icon = icon("filter", lib = "font-awesome"),
                                        label = "Selector datos",
                                        selectInput('ei_dest1.0', '1. Seleccione país de destino:', choices = paises_t$pais_destino, selected = "Todos"),
                                        pickerInput('ei_dest1.1', '2. Seleccione categoría de clasificación:',
                                                    choices = categorias_ei,
                                                    options = list(`actions-box` = TRUE,
                                                                   `deselect-all-text` = "Ninguna categoría",
                                                                   `select-all-text` = "Todas las categorías",
                                                                   `none-selected-text` = "Seleccione al menos una categoría de clasificación.",
                                                                   `selected-text-format` = "count > 4"),
                                                    selected = categorias_ei[1:length(categorias_ei)],
                                                    multiple = TRUE),
                                        sliderInput("ei_dest1.2", "3. Seleccione rango de años para visualizar en tabla de datos:",
                                                    min = 2010, max = 2017, value = c(2010, 2017),
                                                    sep = ""),
                                        animate = animateOptions(
                                          enter = animations$fading_entrances$fadeInLeftBig,
                                          exit = animations$fading_exits$fadeOutRightBig)),
                                      br(),
                                      dropdown(
                                        style = "bordered", status = "warning", 
                                        tooltip = tooltipOptions(title = "Fuentes"),
                                        icon = icon("book", lib = "font-awesome"),
                                        tags$h5("Fuentes"),
                                        uiOutput("fuentes.ei_dest"),
                                        animate = animateOptions(
                                          enter = animations$fading_entrances$fadeInLeftBig,
                                          exit = animations$fading_exits$fadeOutRightBig)),
                                      br(),
                                      dropdown(
                                        style = "bordered", status = "warning", 
                                        tooltip = tooltipOptions(title = "Notas"),
                                        icon = icon("file-text", lib = "font-awesome"),
                                        tags$h4("Indicador Esfuerzo Innovador"),
                                        uiOutput("acerca_ei_dest"), 
                                        animate = animateOptions(
                                          enter = animations$fading_entrances$fadeInLeftBig,
                                          exit = animations$fading_exits$fadeOutRightBig)),
                                      br(),
                                      dropdown(
                                        style = "bordered", status = "warning", 
                                        icon = icon("cog", lib = "glyphicon"),
                                        uiOutput("conf3"),
                                        animate = animateOptions(
                                          enter = animations$fading_entrances$fadeInLeftBig,
                                          exit = animations$fading_exits$fadeOutRightBig))),
                               column(10,
                                      br(),
                                      fluidRow(
                                        column(9,
                                               uiOutput("nota.tabla_ei_dest"))),
                                      fluidRow(
                                        column(2),
                                        column(8, 
                                               plotlyOutput("plot_ei_dest",  height = 650,  width = "100%"),
                                               br())),
                                      fluidRow(
                                        column(2),
                                        column(8, 
                                               dataTableOutput("tabla_ei_dest")))))
                               ))),

    tabItem(tabName = "coef_export",
            fluidRow(
              column(2,
                     br(), br(),
                     dropdown(
                       style = "bordered", status = "warning", 
                       tooltip = tooltipOptions(title = "Fuentes"),
                       icon = icon("book", lib = "font-awesome"),
                       tags$h4("Exportaciones de Bienes"),
                       uiOutput("fuentes.ce.E"),
                       tags$h4("Producto Interno Bruto"),
                       uiOutput("fuentes.ce.PIB"),
                       animate = animateOptions(
                         enter = animations$fading_entrances$fadeInLeftBig,
                         exit = animations$fading_exits$fadeOutRightBig)),
                     br(),
                     dropdown(
                       style = "bordered", status = "warning", 
                       tooltip = tooltipOptions(title = "Unidades de medida"),
                       icon = icon("scale", lib = "glyphicon"),
                       tags$h4("Exportaciones de Bienes"),
                       uiOutput("unidades.ce.E"),
                       tags$h4("Producto Interno Bruto"),
                       uiOutput("unidades.ce.PIB"),
                       animate = animateOptions(
                         enter = animations$fading_entrances$fadeInLeftBig,
                         exit = animations$fading_exits$fadeOutRightBig)),
                     br(),
                     dropdown(
                       style = "bordered", status = "warning", 
                       tooltip = tooltipOptions(title = "Notas"),
                       icon = icon("file-text", lib = "font-awesome"),
                       tags$h4("Coeficiente Exportador"),
                       uiOutput("notas.ce"), 
                       animate = animateOptions(
                         enter = animations$fading_entrances$fadeInLeftBig,
                         exit = animations$fading_exits$fadeOutRightBig)),
                     br(),
                     dropdown(
                       style = "bordered", status = "warning", 
                       icon = icon("cog", lib = "glyphicon"),
                       uiOutput("conf4"),
                       animate = animateOptions(
                         enter = animations$fading_entrances$fadeInLeftBig,
                         exit = animations$fading_exits$fadeOutRightBig))),
              column(10,
                     br(),
                     box(title = "Evolución Exportaciones de bienes y Producto Interno Bruto", 
                         status = "primary",
                         plotlyOutput("plot_exp_va", height = 550)),
                     box(title = "Coeficiente exportador",
                         status = "primary",
                         plotlyOutput("plot_ce", height = 550))))),
            
    tabItem(tabName = "concent_eco",
            fluidRow(
              tabBox(width = 12,
                     tabPanel(title = "Total Uruguay según apertura",
                              column(2,
                                     br(), br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Click para seleccionar datos"),
                                       icon = icon("filter", lib = "font-awesome"), 
                                       label = "Selector datos",
                                       selectInput('divers1', 'Seleccione apertura:', choices = apertura),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Fuentes"),
                                       icon = icon("book", lib = "font-awesome"),
                                       tags$h5("Fuentes"),
                                       uiOutput("fuentes.concent1"),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Notas"),
                                       icon = icon("file-text", lib = "font-awesome"),
                                       tags$h4("Índice Herfindahl - Hirschman"),
                                       uiOutput("acercade.ihh.1"), 
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       icon = icon("cog", lib = "glyphicon"),
                                       uiOutput("conf5"),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig))),
                              column(10,
                                     br(),
                                     fluidRow(
                                       tags$h4("Índice Herfindahl - Hirschman de concentración de las exportaciones de Uruguay, según apertura"),
                                       br(),
                                       uiOutput("nota.plot_ihh")),
                                     fluidRow(
                                       column(2),
                                       column(8,
                                              plotlyOutput("plot_ihh", height = "450px"))))),
                     
                     tabPanel(title = "Evolución por producto",
                              column(2,
                                     br(), br(), 
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Click para seleccionar datos"),
                                       icon = icon("filter", lib = "font-awesome"), 
                                       label = "Selector datos", circle = TRUE,  
                                       selectInput('productos1.1', '1. Seleccione producto:', choices = producto$cod_desc,
                                                   selected = '0201 Carne de animales de la especie bovina, fresca o refrigerada'),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Fuentes"),
                                       icon = icon("book", lib = "font-awesome"),
                                       tags$h5("Fuentes"),
                                       uiOutput("fuentes.concent2"),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Notas"),
                                       icon = icon("file-text", lib = "font-awesome"),
                                       tags$h4("Índice Herfindahl - Hirschman"),
                                       uiOutput("acercade.ihh.2"), 
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       icon = icon("cog", lib = "glyphicon"),
                                       uiOutput("conf6"),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig))),
                              column(10,
                                     br(),
                                     fluidRow(
                                       tags$h4("Índice Herfindahl - Hirschman de concentración de los destinos de exportación, de cada producto"),
                                       br(), 
                                       uiOutput("nota.plot_ihh_prod")),
                                     fluidRow(
                                       column(2),
                                       column(8,
                                              plotlyOutput("plot_ihh_prod", height = "450px"))))),
                     
                     tabPanel(title = "Evolución por destino",
                              column(2,
                                     br(), br(),
                                     dropdown(
                                       style = "bordered", status = "warning",
                                       tooltip = tooltipOptions(title = "Click para seleccionar datos"),
                                       icon = icon("filter", lib = "font-awesome"), 
                                       label = "Selector datos",
                                       selectInput('destinos1.1', '1. Seleccione país de destino:', choices = paises$pais_destino, selected = "Argentina"),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Fuentes"),
                                       icon = icon("book", lib = "font-awesome"),
                                       tags$h5("Fuentes"),
                                       uiOutput("fuentes.concent3"),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Notas"),
                                       icon = icon("file-text", lib = "font-awesome"),
                                       tags$h4("Índice Herfindahl - Hirschman"),
                                       uiOutput("acercade.ihh.3"), 
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       icon = icon("cog", lib = "glyphicon"),
                                       uiOutput("conf7"),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig))),
                              column(10,
                                     br(), 
                                     fluidRow(
                                       tags$h4("Índice Herfindahl - Hirschman de concentración de los productos exportados, a cada destino"),
                                       br(),
                                       uiOutput("nota.plot_ihh_dest")),
                                     fluidRow(
                                       column(2),
                                       column(8,
                                              plotlyOutput("plot_ihh_dest", height = "450px")))))
                     
                              ))),
    
    tabItem(tabName = "divers_eco",
            fluidRow(
              tabBox(width = 12,
                     tabPanel(title = "Por producto",
                              column(2,
                                     br(), br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Click para seleccionar datos"),
                                       icon = icon("filter", lib = "font-awesome"), 
                                       label = "Selector datos", circle = TRUE,  
                                       selectInput('productos2.1', '1. Seleccione producto:', choices = producto$cod_desc,
                                                   selected = '0201 Carne de animales de la especie bovina, fresca o refrigerada'),
                                       selectInput('productos2.2', '2. Seleccione año:', choices = anios, selected = 2017),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Fuentes"),
                                       icon = icon("book", lib = "font-awesome"),
                                       tags$h5("Fuentes"),
                                       uiOutput("fuentes.divers1"),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig))),
                              
                              column(10,
                                     br(),
                                     fluidRow(
                                       tags$h4("Diversificación de destinos de exportación por producto, según año"),
                                       column(9,
                                              uiOutput("nota.tabla_prod"))),
                                     fluidRow(
                                       column(2),
                                       column(8,
                                              plotOutput("plot_arbol_prod", height = "450px"),
                                              br())),
                                     fluidRow(
                                       column(2),
                                       column(8,
                                              dataTableOutput("tabla_prod")))
                                       )),
                     tabPanel(title = "Por destino",
                              column(2,
                                     br(), br(),
                                     dropdown(
                                       style = "bordered", status = "warning",
                                       tooltip = tooltipOptions(title = "Click para seleccionar datos"),
                                       icon = icon("filter", lib = "font-awesome"), 
                                       label = "Selector datos",
                                       selectInput('destinos2.1', '1. Seleccione país de destino:', choices = paises$pais_destino, selected = "Argentina"),
                                       selectInput('destinos2.2', '2. Seleccione año:', choices = anios, selected = 2017),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig)),
                                     br(),
                                     dropdown(
                                       style = "bordered", status = "warning", 
                                       tooltip = tooltipOptions(title = "Fuentes"),
                                       icon = icon("book", lib = "font-awesome"),
                                       tags$h5("Fuentes"),
                                       uiOutput("fuentes.divers2"),
                                       animate = animateOptions(
                                         enter = animations$fading_entrances$fadeInLeftBig,
                                         exit = animations$fading_exits$fadeOutRightBig))),
                              column(10,
                                     br(), 
                                     fluidRow(
                                       tags$h4("Diversificación de productos exportados por destino, según año"),
                                       column(9,
                                              uiOutput("nota.tabla_dest"))),
                                     fluidRow(
                                       column(2),
                                       column(8,
                                              plotOutput("plot_arbol_dest", height = "450px"),
                                              br())),
                                     fluidRow(
                                       column(2),
                                       column(8,
                                              dataTableOutput("tabla_dest"))))
                              )))),
    
    tabItem(tabName = "tratamiento",
            br(),
            fluidRow(
              column(2),
              column(10,
                     box(title = "Tratamiento de la base de exportaciones",
                         status = "primary",
                         uiOutput("acercade.exports"),
                         width = 12)))),
    
    tabItem(tabName = "desc_ncm",
            br(),
            fluidRow(
              column(2),
              column(10,
                     box(title = "Nomenclatura común del MERCOSUR (NCM)",
                         tags$h5("Descripción de productos según clasificación NCM a 4 dígitos."),
                         status = "primary",
                         dataTableOutput("tablaNCM"),
                         width = 12))))
  ))


ui <- dashboardPage(header, sidebar, body, skin = "black")


## Server
server <- function(input, output) {
  
  ##### "Exportaciones de bienes"    
  
  dataset_export1.1 <- reactive({
    exports %>% 
      filtra_producto(input$export1.1) %>%
      group_by(anio) %>% 
      summarise(usd_mm = round(sum(usd_mm), 1))
  })
  
  output$nota.plot_export1.1 <- renderUI({
    helpText(
      h5(if_else(input$export1.1 == "Todos", 
                 "Productos: Todos",
                 str_c('Producto: ', str_extract(input$export1.1, "(?<=\\d ).*"), '.'))))
  })
  
  output$plot_export1.1 <- renderPlotly({
    m1 <- dataset_export1.1() %>% 
      ungroup %>% 
      select(usd_mm) %>%
      max
    p1 <- ggplot(dataset_export1.1() %>% 
                   rename(`Año` = anio,
                          USDMM = usd_mm), 
                 aes(title = ,
                     `Año`, USDMM,
                     colour = "Todos los destinos")) + 
      geom_line(aes(group = 1)) +
      geom_point(aes(size = 1,
                     text = str_c('Total (',`Año`, '): ', 
                                  format(USDMM, big.mark = ".", decimal.mark = ","),
                                  ' usdmm')),
                 show.legend = FALSE) +
      scale_y_continuous(limits=c(0, m1)) +
      scale_colour_manual(values =  c("#d0400a")) + 
      labs(x = "Año", y = "USDMM") +
      theme(axis.line = element_line())
      
    p1 <- ggplotly(p1, tooltip = c("text")) %>% 
      config(displayModeBar = FALSE) %>% 
      config(showLink = FALSE) %>% 
      layout(xaxis = list(tickangle = -45),
             legend = list(orientation = "h", x = -0.1, y = -0.6)) 
  })
  
  
  output$fuentes.exports <- renderUI({ 
    helpText("Observatorio Productivo a partir de DNA y Uruguay XXI")
  })
  output$unidades.exports <- renderUI({ 
    helpText("Los montos de exportaciones de bienes están expresados en millones de dólares.")
  })
  
  dataset_export1.2 <- reactive({ 
    exports %>% 
      filtra_producto(input$export1.1) %>% 
      filtra_pais_top(input$export1.2) %>%
      group_by(anio, pais_destino) %>%
      summarise(usd_mm = round(sum(usd_mm), 1))
  })
  
  
  output$nota.plot_export1.2 <- renderUI({
    helpText(
      h5(if_else(input$export1.1 == "Todos", 
                 "Productos: Todos",
                 str_c('Producto: ', str_extract(input$export1.1, "(?<=\\d ).*"), '.'))),
      h5(if_else(input$export1.2 == 1,
                 "Principal país de destino de las exportaciones.",
                 str_c(input$export1.2, " principales países de destino de las exportaciones."))))
  })
  
  output$plot_export1.2 <- renderPlotly({
    m2 <- dataset_export1.1() %>% 
      ungroup %>% 
      select(usd_mm) %>%
      max
    p2 <- ggplot(dataset_export1.2() %>% 
                   rename(`Año` = anio,
                          USDMM = usd_mm,
                          Destino = pais_destino), 
                 aes(`Año`, 
                     USDMM,
                     colour = Destino)) +
      geom_line(aes(group = Destino)) +
      geom_point(aes(size = 1,
                     text = str_c(Destino, ' (', `Año`, '): ', 
                                  format(USDMM, big.mark = ".", decimal.mark = ","),
                                  ' usdmm')), 
                 show.legend = FALSE) +
      scale_y_continuous(limits=c(0, m2)) +
      scale_colour_manual(values =  c("#BACB33", "#F7941E", "#999B9E", "#ffcc00", "#2974B4"),
                          drop = TRUE) +
      labs(x = "Año", y = "USDMM", colour = "", size = "") +
      theme(axis.line = element_line(),
            legend.position = "bottom")
    p2 <- ggplotly(p2, tooltip = c("text")) %>% 
      config(displayModeBar = FALSE) %>% 
      config(showLink = FALSE) %>%
      layout(xaxis = list(tickangle = -45),
             legend = list(orientation = "v", x = -0.1, y = -0.6)) 
  })
  
  
  
  #### "Exportaciones por Esfuerzo Innovador"
  ### "por productos"
  
  output$acerca_ei_prod <- renderUI({
    helpText("De acuerdo a la metodología adoptada por Uruguay XXI, este indicador es medido a través 
             del gasto en Investigación y Desarrollo (I+D) privado y público nacional, directo e indirecto 
             (incorporado en insumos).", br(), "Se utiliza, para clasificar las exportaciones 
             uruguayas de bienes por Contenido Tecnológico, de acuerdo a las siguientes categorías:", br(), 
             "- Alto Esfuerzo Innovador (AEI)", br(),
             "- Medio Alto Esfuerzo Innovador (MAEI)", br(),
             "- Medio Bajo Esfuerzo Innovador (MBEI)", br(),
             "- Bajo Esfuerzo Innovador (BEI)", br())
  })
  
  output$fuentes.ei_prod <- renderUI({ 
    helpText("Observatorio Productivo a partir de DNA y Uruguay XXI")
  })


  dataset_ei_prod1.1 <- reactive({
    dataset_ei_prod1.1_1 <- exports %>% 
      filtra_producto(input$ei_prod1.0) %>%
      filter(EI %in% input$ei_prod1.1) %>% 
      filter(anio >= input$ei_prod1.2[1], 
             anio <= input$ei_prod1.2[2]) %>% 
      group_by(anio, EI) %>% 
      summarise(usd_mm = round(sum(usd_mm), 2), 
                prop = round(sum(prop/100), 4)) %>% 
      arrange(-as.numeric(anio)) %>% 
      rename(`Participación (%)*` = prop, 
             `Esfuerzo innovador` = EI, 
             Año = anio, 
             `Total (USDMM)` = usd_mm)
    if(dim(dataset_ei_prod1.1_1)[1] == 0)
      return(NULL)
    dataset_ei_prod1.1_1
  })
  
  dataset_ei_prod1.2 <- reactive({
    dataset_ei_prod1.2_1 <- exports %>% 
      filtra_producto(input$ei_prod1.0) %>%
      filter(EI %in% input$ei_prod1.1) %>%
      mutate(EI = factor(EI, levels = categorias_ei)) %>% 
      group_by(anio, EI) %>% 
      summarise(prop = round(sum(prop), 2)) %>% 
      spread(anio, prop) %>%
      as.data.frame %>% 
      gather(anio, prop, -EI)
    if(dim(dataset_ei_prod1.2_1)[1] == 0)
      return(NULL)
    dataset_ei_prod1.2_1
  })
  
  output$nota.tabla_ei_prod <- renderUI({
    helpText(
      h5(if_else(input$ei_prod1.0 == "Todos", 
                 "Productos: Todos",
                 str_c('Producto: ', str_extract(input$ei_prod1.0, "(?<=\\d ).*"), '.'))))
  })

  output$tabla_ei_prod <- renderDataTable({
    if (is.null(dataset_ei_prod1.1())){
      return(NULL)} else {
        columnLabels <- c("", "Categorías de clasificación según Esfuerzo Innovador.",
                          "", "Participación de las exportaciones anuales de cada producto, en el total de las exportaciones de bienes uruguayas.")
        datatable(
          dataset_ei_prod1.1() %>% 
            ungroup %>% 
            mutate(Año = as.factor(Año)),
          rownames = FALSE,
          options = list(
            searching = FALSE,
            pagingType = "simple",
            lengthChange = FALSE,
            language = list(
              search= 'Filtrar: ',
              info = ' _START_ - _END_ (_TOTAL_)',
              paginate = list(previous = 'Anterior', `next` = 'Siguiente')),
            columnDefs = 
              list(
                list(
                  className = 'dt-head-center',
                  targets = c(0:1))),
            pageLength = 5),
          container = withTags(table(class = 'display', thead(tr(apply(data.frame(
            colnames=c("Año", "Esfuerzo Innovador",  "Total (USDMM)", "Participación (%)"),
            labels = columnLabels), 1, function(x) th(title=x[2], x[1]))))))) %>% 
          formatPercentage("Participación (%)*", digits = 2) %>% 
          formatCurrency("Total (USDMM)", digits = 2, currency = "",
                         mark = ".", dec.mark =  ",")
          }
  })
  
  output$nota.plot_ei_prod <- renderUI({
    helpText(
      h5(if_else(input$ei_prod1.0 == "Todos", 
                 "Productos: Todos",
                 str_c('Producto: ', str_extract(input$ei_prod1.0, "(?<=\\d ).*"), '.'))))
  })
  
  
  output$plot_ei_prod <- renderPlotly({
    if (is.null(dataset_ei_prod1.2())){
      return(NULL)} else {
        p3 <- ggplot(dataset_ei_prod1.2() %>% 
                       rename(`Esfuerzo Innovador` = EI,
                              `Año` = anio,
                              `Participación (%)` = prop), 
                     aes(x = `Año`, y = `Participación (%)`, fill = `Esfuerzo Innovador`)) +
          geom_col(width=0.5, position = position_stack(reverse = TRUE),
                   aes(text = str_c(`Esfuerzo Innovador`, ' (', `Año`, '): ', 
                                    format(`Participación (%)`, big.mark = ".", decimal.mark = ","), '%'))) +
          labs(x = "Año", 
               y = "Participación (%)", 
               colour = "") +
          scale_fill_manual(values =  c("#BACB33", "#F7941E", "#999B9E", "#ffcc00", "#2974B4"), 
                              limits = c("4. Alto",  "3. Medio Alto", "2. Medio Bajo", "1. Bajo", "0. Sin clasificar"),
                              drop = FALSE) +
          theme(axis.line = element_line())
        p3 <- ggplotly(p3, tooltip = "text") %>% 
          config(displayModeBar = FALSE) %>% 
          config(showLink = FALSE) %>%
          layout(xaxis = list(tickangle = -45),
                 legend = list(orientation = "v", x = -0.1, y = -0.6)) 
        }
  })
  
  
  ### "por destinos"
  
  output$acerca_ei_dest <- renderUI({
    helpText("De acuerdo a la metodología adoptada por Uruguay XXI, este indicador es medido a través 
             del gasto en Investigación y Desarrollo (I+D) privado y público nacional, directo e indirecto 
             (incorporado en insumos).", br(), "Se utiliza, para clasificar las exportaciones uruguayas
             de bienes por Contenido Tecnológico, de acuerdo a las siguientes categorías:", br(), 
             "- Alto Esfuerzo Innovador (AEI)", br(),
             "- Medio Alto Esfuerzo Innovador (MAEI)", br(),
             "- Medio Bajo Esfuerzo Innovador (MBEI)", br(),
             "- Bajo Esfuerzo Innovador (BEI)", br())
  })
  
  output$fuentes.ei_dest <- renderUI({ 
    helpText("Observatorio Productivo a partir de DNA y Uruguay XXI")
  })
  
  dataset_ei_dest1.1 <- reactive({
    dataset_ei_dest1.1_1 <- exports %>% 
      filtra_pais(input$ei_dest1.0) %>% 
      filter(EI %in% input$ei_dest1.1) %>% 
      filter(anio >= input$ei_dest1.2[1], 
             anio <= input$ei_dest1.2[2]) %>% 
      group_by(anio, EI) %>% 
      summarise(usd_mm = round(sum(usd_mm), 2), 
                prop = round(sum(prop/100), 4)) %>% 
      arrange(-as.numeric(anio)) %>% 
      rename(`Participación (%)` = prop, 
             `Esfuerzo innovador` = EI, 
             Año = anio, 
             `Total (USDMM)` = usd_mm)
    if(dim(dataset_ei_dest1.1_1)[1] == 0)
      return(NULL)
    dataset_ei_dest1.1_1
  })
  
  dataset_ei_dest1.2 <- reactive({
    dataset_ei_dest1.2_1 <- exports %>% 
      filtra_pais(input$ei_dest1.0) %>% 
      filter(EI %in% input$ei_dest1.1) %>% 
      mutate(EI = factor(EI, levels = categorias_ei)) %>% 
      group_by(anio, EI) %>% 
      summarise(prop = round(sum(prop), 2)) %>% 
      spread(anio, prop) %>% 
      as.data.frame %>% 
      gather(anio, prop, -EI)
    if(dim(dataset_ei_dest1.2_1)[1] == 0)
      return(NULL)
    dataset_ei_dest1.2_1
    
  })
  
  output$nota.tabla_ei_dest <- renderUI({
    helpText(
      h5(if_else(input$ei_dest1.0 == "Todos", 
                 "Destinos: Todos",
                 str_c('Destino: ', input$ei_dest1.0, '.'))))
  })
  
  output$tabla_ei_dest <- renderDataTable({
    if (is.null(dataset_ei_dest1.1())){
      return(NULL)} else {
        columnLabels <- c("", "Categorías de clasificación según Esfuerzo Innovador.",
                          "", "Participación de las exportaciones anuales a cada destino, en el total de las exportaciones de bienes uruguayas.")
        datatable(
          dataset_ei_dest1.1() %>% 
            ungroup %>% 
            mutate(Año = as.factor(Año)),
          rownames = FALSE,
          options = list(
            searching = FALSE,
            pagingType = "simple",
            lengthChange = FALSE,
            language = list(
              search= 'Filtrar: ',
              info = ' _START_ - _END_ (_TOTAL_)',
              paginate = list(previous = 'Anterior', `next` = 'Siguiente')),
            columnDefs = 
              list(
                list(
                  className = 'dt-head-center',
                  targets = c(0:1))),
            pageLength = 5),
          container = withTags(table(class = 'display', thead(tr(apply(data.frame(
            colnames=c("Año", "Esfuerzo Innovador",  "Total (USDMM)", "Participación (%)"),
            labels = columnLabels), 1, function(x) th(title=x[2], x[1]))))))) %>% 
          formatPercentage("Participación (%)", digits = 2) %>% 
          formatCurrency("Total (USDMM)", digits = 2, currency = "",
                         mark = ".", dec.mark =  ",")
        }
  })
  
  output$nota.plot_ei_dest <- renderUI({
    helpText(
      h5(if_else(input$ei_dest1.0 == "Todos", 
                 "Destinos: Todos",
                 str_c('Destinos: ', input$ei_dest1.0), '.')))
  })
  
  output$plot_ei_dest <- renderPlotly({
    if (is.null(dataset_ei_dest1.2())){
      return(NULL)} else {
        p4 <- ggplot(dataset_ei_dest1.2() %>% 
                       rename(`Esfuerzo Innovador` = EI,
                              `Año` = anio,
                              `Participación (%)` = prop), 
                     aes(x = `Año`, y = `Participación (%)`, fill = `Esfuerzo Innovador`)) +
          geom_col(width=0.5, position = position_stack(reverse = TRUE),
                   aes(text = str_c(`Esfuerzo Innovador`, ' (', `Año`, '): ', 
                                    format(`Participación (%)`, big.mark = ".", decimal.mark = ","), '%'))) +
          labs(x = "Año", 
               y = "Participación (%)", 
               colour = "") +
          scale_fill_manual(values =  c("#BACB33", "#F7941E", "#999B9E", "#ffcc00", "#2974B4"), 
                            limits = c("4. Alto",  "3. Medio Alto", "2. Medio Bajo", "1. Bajo", "0. Sin clasificar"),
                            drop = FALSE) +
          theme(axis.line = element_line())
        p4 <- ggplotly(p4, tooltip = "text") %>% 
          config(displayModeBar = FALSE) %>% 
          config(showLink = FALSE) %>%
          layout(xaxis = list(tickangle = -45),
                 legend = list(orientation = "v", x = -0.1, y = -0.6)) 
          }
  })
  

  #### "Coeficiente exportador"

  output$plot_exp_va <- renderPlotly({
    p5 <- ggplot(ce_anio %>% 
                   rename(`Exportaciones de bienes` = usd_mm, 
                          `Producto Interno Bruto` = va_usd_mm) %>%
                   select(-ce) %>% 
                   gather(grupo, monto, -anio) %>% 
                   rename(`Año` = anio,
                          USDMM = monto,
                          variable = grupo), 
                 aes(x = `Año`, y = USDMM)) +
      geom_line(aes(group = variable, 
                    colour = variable)) +
      geom_point(aes(size = 1,
                     colour = variable,
                     text = str_c(str_replace(variable, "\\s+\\n", " "), ' (',
                                  `Año`, '): ', 
                                  format(round(USDMM, 2), big.mark = ".", decimal.mark = ","),
                                  ' usdmm')),
                 show.legend = FALSE) +  
      labs(x = "Año", y = "USDMM", colour = "") +
      scale_y_continuous(limits=c(0, 65000)) +
      scale_colour_manual(values = c("#BACB33", "#ffcc00"),
                          limits = c("Exportaciones de bienes", 
                                     "Producto Interno Bruto"),
                          drop = FALSE) +
      theme(axis.line = element_line())
    p5 <- ggplotly(p5, tooltip = "text") %>% 
      config(displayModeBar = FALSE) %>% 
      config(showLink = FALSE) %>%
      layout(xaxis = list(tickangle = -45),
             legend = list(orientation = "v", x = -0.1, y = -0.6)) 
  })
  
  output$plot_ce <- renderPlotly({
    p6 <- ggplot(ce_anio %>% 
                   rename(`Coeficiente Exportador` = ce) %>% 
                   select(-usd_mm, -va_usd_mm) %>% 
                   gather(grupo, monto, -anio) %>% 
                   rename(`Año` = anio,
                          USDMM = monto,
                          variable = grupo),
                 aes(x = `Año`, y = USDMM)) +
      geom_line(aes(group = variable, 
                    colour = variable)) +
      geom_point(aes(size = 1,
                     colour = variable,
                     text = str_c(str_replace(variable, "\\s+\\n", " "), ' (', `Año`, '): ', 
                                  format(round(USDMM, 2), big.mark = ".", decimal.mark = ",")),
                     show.legend = FALSE)) +
      labs(x = "Año", y = "Coeficiente exportador (%)", colour = "", size = "") +
      scale_y_continuous(limits=c(0, 40)) +
      scale_colour_manual(values = c("#F7941E"),
                          limit = c("Coeficiente Exportador"),
                          drop = FALSE) +
      theme(axis.line = element_line())
    p6 <- ggplotly(p6, tooltip = "text") %>% 
      config(displayModeBar = FALSE) %>% 
      config(showLink = FALSE) %>%
      layout(xaxis = list(tickangle = -45),
             legend = list(orientation = "v", x = -0.1, y = -0.6)) 
  })
  
  output$fuentes.ce.E <- renderUI({ 
    helpText("Observatorio Productivo a partir de DNA y Uruguay XXI")
  })
  
  output$unidades.ce.E <- renderUI({ 
    helpText("Millones de dólares.")
  })
  
  output$fuentes.ce.PIB <- renderUI({ 
    helpText("Banco Central del Uruguay")
  })

  output$unidades.ce.PIB <- renderUI({ 
    helpText("Serie PIB a precios corrientes, expresada en millones de dólares 
             considerando cotización promedio anual.")
  })
  
  output$notas.ce <- renderUI({
    withMathJax(
      helpText("Se define como la proporción de la producción que se exporta.", 
               br(), br(),
               "En el presente trabajo, interesa analizar el impacto de las exportaciones 
               de bienes en el total de la producción de la economía.", 
               br(), 
               "Esto es:", 
               br(), 
               '$$CE_{bienes} = \\frac{Exportaciones_{bienes}}{PIB}  \\times 100$$', 
               br()))
  })
  
  
  ### "Diversificación"
  
  #### "Diversificación de la economía"  
  
  fuenteOP <- helpText("Observatorio Productivo.")
  
  output$fuentes.concent1 <- renderUI({ 
    fuenteOP
  })
  
  output$fuentes.concent2 <- renderUI({ 
    fuenteOP
  })
  
  output$fuentes.concent3 <- renderUI({ 
    fuenteOP
  })
  
  output$acercade.ihh.1 <- renderUI({
    withMathJax(
      helpText("Es un indicador para estudiar la concentración. Tiene la propiedad de
               ponderar el peso de cada producto o cada país en el total de comercio,
               de modo que si el valor exportado es reducido, tiene una influencia 
               pequeña en el indicador final, y viceversa.", 
               '$$IHH = \\sum_{i} {(\\frac{x_{i}}{x})^{2} } $$', "Siendo:", 
               '$$ x_i: \\:monto\\:de\\:exportaciones\\:del\\:producto\\:i $$',
               '$$ x: \\:exportaciones\\:totales\\:del\\:pais$$',
               "Tal que,", '$$ {0} \\leq {IHH} \\leq {1} $$', 
               br(), 
               "Si el indicador toma valor nulo, implica perfecta diversificación,
               mientras que si toma valor unitario, implica perfecta concentración."))
  })
  
  output$acercade.ihh.2 <- renderUI({
    withMathJax(
      helpText("Es un indicador para estudiar la concentración. Tiene la propiedad de
               ponderar el peso de cada producto o cada país en el total de comercio,
               de modo que si el valor exportado es reducido, tiene una influencia 
               pequeña en el indicador final, y viceversa.", 
               '$$IHH = \\sum_{i} {(\\frac{x_{i}}{x})^{2} } $$', "Siendo:", 
               '$$ x_i: \\:monto\\:de\\:exportaciones\\:del\\:producto\\:i $$',
               '$$ x: \\:exportaciones\\:totales\\:del\\:pais$$',
               "Tal que,", '$$ {0} \\leq {IHH} \\leq {1} $$', 
               br(),
               "Si el indicador toma valor nulo, implica perfecta diversificación,
               mientras que si toma valor unitario, implica perfecta concentración."))
  })

  output$acercade.ihh.3 <- renderUI({
    withMathJax(
      helpText("Es un indicador para estudiar la concentración. Tiene la propiedad de
                ponderar el peso de cada producto o cada país en el total de comercio,
                de modo que si el valor exportado es reducido, tiene una influencia 
                pequeña en el indicador final, y viceversa.", 
                '$$IHH = \\sum_{i} {(\\frac{x_{i}}{x})^{2} } $$', "Siendo:", 
                '$$ x_i: \\:monto\\:de\\:exportaciones\\:del\\:producto\\:i $$',
                '$$ x: \\:exportaciones\\:totales\\:del\\:pais$$',
                "Tal que,", '$$ {0} \\leq {IHH} \\leq {1} $$', 
                br(),
                "Si el indicador toma valor nulo, implica perfecta diversificación,
                mientras que si toma valor unitario, implica perfecta concentración."))
  })
  
  dataset_eco <- reactive({
    exports %>% participacion_apertura(input$divers1)
  })
  
  output$nota.plot_ihh <- renderUI({
    helpText(
      h5(str_c('Apertura: ', input$divers1, '.')))
  })
  
  output$plot_ihh <- renderPlotly({
    p7 <- ggplot(dataset_eco() %>% 
                   rename(`Año` = anio,
                          IHH = ihh),
                 aes(`Año`, IHH)) +
      geom_line(aes(group = 1), 
                colour = "grey80") +
      geom_point(aes(size = 1,
                     text = str_c(`Año`, ': ', 
                                  format(round(IHH, 4), big.mark = ".", decimal.mark = ",")),
                     show.legend = FALSE)) +
      geom_hline(aes(yintercept = 1), color = "#2974B4") +
      geom_hline(aes(yintercept = 0), color = "#2974B4") +
      scale_y_continuous(limits = c(0, 1)) +
      labs(x = "Año", y = "IHH") +
      theme(axis.line = element_line())
    p7 <- ggplotly(p7, tooltip = "text") %>% 
      config(displayModeBar = FALSE) %>% 
      config(showLink = FALSE) %>%
      layout(xaxis = list(tickangle = -45)) 

  })
  
  #### "Diversificación de productos"
  
  output$fuentes.divers1 <- renderUI({ 
    fuenteOP
  })
  
  output$fuentes.divers2 <- renderUI({ 
    fuenteOP
  })
  

  dataset_prod_uy <-reactive({
    participacion_uy_argumento(exports, input$productos1.1)
  })
  
  output$nota.plot_ihh_prod <- renderUI({
    helpText(
      h5(str_c('Producto: ', str_extract(input$productos1.1, "(?<=\\d ).*"), '.')))
  })
  
  output$plot_ihh_prod <- renderPlotly({
    p8 <- ggplot(dataset_prod_uy() %>% 
                   group_by(anio) %>% 
                   summarise(ihh = sum(cuota2)) %>% 
                   rename(`Año` = anio,
                          IHH = ihh), 
                 aes(`Año`, IHH)) + 
      geom_line(aes(group = 1), colour = "grey80") +
      geom_point(aes(size = 1,
                     text = str_c(`Año`, ': ', 
                                  format(round(IHH, 4), big.mark = ".", decimal.mark = ","))),
                 show.legend = FALSE) +
      geom_hline(aes(yintercept = 1), color = "#2974B4") +
      geom_hline(aes(yintercept = 0), color = "#2974B4") +
      scale_y_continuous(limits = c(0, 1)) +
      labs(x = "Año", y = "IHH") +
      theme(axis.line = element_line())
    p8 <- ggplotly(p8, tooltip = "text") %>% 
      config(displayModeBar = FALSE) %>% 
      config(showLink = FALSE) %>%
      layout(xaxis = list(tickangle = -45)) 
  })
  
  
  dataset_prod_plot <- reactive({
    dataset_productos <- exports %>% 
      participacion_argumento(
        as.numeric(input$productos2.2), 
        input$productos2.1)
    if(dim(dataset_productos)[1] == 0)
      return(NULL)
    dataset_productos
  })
  
  dataset_prod <- reactive({
    dataset_productos <- exports %>% 
      participacion_argumento(
        as.numeric(input$productos2.2), 
        input$productos2.1)
    if(dim(dataset_productos)[1] == 0)
      return(NULL)
    dataset_productos
  })
  
  output$nota.tabla_prod <- renderUI({
    if (is.null(dataset_prod_plot())){
      helpText(
        h5(str_c('Producto: ', str_extract(input$productos2.1, "(?<=\\d ).*"), '.')),
        h5(str_c('Año: ', input$productos2.2, '.')),
        br(), br(), br(),
        h4("No hay información, por favor modifique el año seleccionado."),
        h5("(Se sugiere considerar el gráfico Evolución IHH, para modificar la selección)."))} else {
          helpText(
            h5(str_c('Producto: ', str_extract(input$productos2.1, "(?<=\\d ).*"), '.')),
            h5(str_c('Año: ', input$productos2.2, '.')))}
  })
  
  output$tabla_prod <- renderDataTable({
    if (is.null(dataset_prod())){
      return(NULL)} else {
        datatable(
          dataset_prod() %>% 
            select(-cuota2, -ncm_4) %>% 
            adorn_totals('row') %>% 
            mutate(participacion = if_else(pais_destino == 'Total', 
                                           round(participacion/100),
                                           round(participacion/100, 4)),
                   usd_mm = round(usd_mm, 2)) %>% 
            transmute(`País de destino` = pais_destino, 
                      `Total (USDMM)` = usd_mm, 
                      `Participación (%)` = participacion),
          rownames = FALSE,
          filter = "top",
          options = list(
            ordering = FALSE,
            pagingType = "simple",
            lengthChange = FALSE,
            language = list(
              search= 'Filtrar: ',
              info = ' _START_ - _END_ (_TOTAL_)',
              paginate = list(previous = 'Anterior', `next` = 'Siguiente')),
            columnDefs = 
              list(
                list(
                  className = 'dt-head-center',
                  targets = c(0))),
            pageLength = 5)) %>% 
          formatPercentage("Participación (%)", digits = 2) %>% 
          formatCurrency("Total (USDMM)", digits = 2, currency = "",
                         mark = ".", dec.mark =  ",")
      }
  })
  

  output$plot_arbol_prod <- renderPlot({
    if (is.null(dataset_prod_plot())){
      return(NULL)} else {
        ggplot(dataset_prod_plot() %>% 
                 anual_top_prod(10),  
               aes(area = participacion,
                   fill = pais_destino,
                   label = paste(pais_destino, ", ", round(participacion, 1), "%", sep = ""))) +
          geom_treemap() +
          scale_colour_brewer(palette = paleta) +
          geom_treemap_text(colour = "white", place = "centre", grow = TRUE) +
          theme(legend.position = "bottom") +
          scale_fill_discrete("") +
          labs(fill = "Destinos")}
          guides(col = guide_legend(nrow = 8, byrow = TRUE))
  })
  
  
  
  #### "Diversificación de destinos"

  dataset_dest_uy <-reactive({
    participacion_uy_argumento(exports, 
                               input$destinos1.1)
  })
  
  output$nota.plot_ihh_dest <- renderUI({
    helpText(
      h5(str_c('Destino: ', input$destinos1.1, '.')))
  })
  
  output$plot_ihh_dest <- renderPlotly({
    p9 <- ggplot(dataset_dest_uy() %>%
                   group_by(anio) %>% 
                   summarise(ihh = sum(cuota2)) %>% 
                   rename(`Año` = anio,
                          IHH = ihh), 
                 aes(`Año`, IHH)) + 
      geom_line(aes(group = 1), colour = "grey80") +
      geom_point(aes(size = 1,
                     text = str_c(`Año`, ': ', 
                                  format(round(IHH, 4), big.mark = ".", decimal.mark = ","))),
                 show.legend = FALSE) +
      geom_hline(aes(yintercept = 1), color = "#2974B4") +
      geom_hline(aes(yintercept = 0), color = "#2974B4") +
      scale_y_continuous(limits = c(0, 1)) +
      labs(x = "Año", y = "IHH")  +
      theme(axis.line = element_line())
    p9 <- ggplotly(p9, tooltip = "text") %>% 
      config(displayModeBar = FALSE) %>% 
      config(showLink = FALSE) %>%
      layout(xaxis = list(tickangle = -45)) 
  })
  
  
  dataset_dest_plot <- reactive({
    dataset_destino <- exports %>% 
      participacion_argumento(
        as.numeric(input$destinos2.2), 
        as.character(input$destinos2.1))
    if(dim(dataset_destino)[1] == 0)
      return(NULL)
    dataset_destino
  })
  
  dataset_dest <- reactive({
    dataset_destino <- exports %>% 
      participacion_argumento(
        as.numeric(input$destinos2.2), 
        as.character(input$destinos2.1))
    if(dim(dataset_destino)[1] == 0)
      return(NULL)
    dataset_destino
  })
  
  output$nota.tabla_dest <- renderUI({
    if (is.null(dataset_dest_plot())){
      helpText(
        h5(str_c('Destino: ', input$destinos2.1, '.')),
        h5(str_c('Año: ', input$destinos2.2, '.')),
        br(), br(), br(),
        h4("No hay información, por favor modifique el año seleccionado."),
        h5("(Se sugiere considerar el gráfico Evolución IHH, para modificar la selección)."))} else {
    helpText(
      h5(str_c('Destino: ', input$destinos2.1, '.')),
      h5(str_c('Año: ', input$destinos2.2, '.'))
      )}
  })
  
  
  output$tabla_dest <- renderDataTable({
    if (is.null(dataset_dest())){
      return(NULL)} else {
      datatable(
        dataset_dest() %>% 
          left_join(ncm, by = c("ncm_4" = "codigo")) %>% 
          select(-cuota2) %>% 
          anual_top(1000000) %>% 
          arrange(orden) %>% 
          select(-orden) %>% 
          adorn_totals('row') %>% 
          mutate(participacion = if_else(ncm_4 == 'Total', 
                                         round(participacion/100), 
                                         round(participacion/100, 4)),
                 usd_mm = round(usd_mm, 2)) %>% 
          transmute(`Código producto` = ncm_4, 
                    `Descripción del Producto` = descripcion, 
                    `Total (USDMM)` = usd_mm, 
                    `Participación (%)` = participacion) %>% 
          unique,
        rownames = FALSE,
        filter = "top",
        options = list(
          ordering = FALSE,
          lengthChange = FALSE,
          pagingType = "simple",
          language = list(
              search= 'Filtrar: ',
              info = ' _START_ - _END_ (_TOTAL_)',
              paginate = list(previous = 'Anterior', `next` = 'Siguiente')),
          columnDefs = 
            list(
              list(
                className = 'dt-head-center',
                targets = c(0:1))),
          pageLength = 5)) %>% 
          formatPercentage("Participación (%)", digits = 2) %>% 
          formatCurrency("Total (USDMM)", digits = 2, currency = "",
                         mark = ".", dec.mark =  ",")
        }
  })
 
  output$plot_arbol_dest <- renderPlot({
    if (is.null(dataset_dest_plot())){
      return(NULL)} else {
        ggplot(dataset_dest_plot() %>% 
                 anual_top(10), 
               aes(area = participacion, 
                   fill = ncm_4,
                   label = paste(ncm_4, ", ", round(participacion, 1), "%", sep = ""))) +
          geom_treemap() +
          geom_treemap_text(colour = "white", place = "centre", grow = TRUE) +
          theme(legend.position = "bottom") +
          scale_fill_discrete("") +
          labs(fill = "Productos")}
  })
  
  #### "Acerca de:"
  
  output$acercade.exports <- renderUI({ 
    helpText(
      h4("La fuente de información es la Dirección Nacional de Aduanas (DNA),",
         "a través de los documentos únicos aduaneros (DUA)."), br(),
      h4("Los DUA de exportación no consideran las ventas al exterior realizadas 
         desde territorio franco, pero sí incluyen las ventas realizadas a dicho 
         territorio por concepto de insumos. Por lo tanto, se procede a los siguientes ajustes:"),
      h4("1. Se incorpora información de los DUA tránsitos con país de origen Uruguay 
         y destino resto del mundo, que consideren empresas con montos de transacciones 
         superiores a los U$S 500.000, en al menos un año de estudio. (Fuente: Dirección Nacional de Aduanas)."),
      h4("2. Se incorpora información acerca de las exportaciones de pasta de celulosa (Fuente: Uruguay XXI)."), 
      h4("3. Se ajustan los países de destino de las exportaciones de granos, que figuran originalmente en los DUA
         con destino \"Zona Franca Nueva Palmira\" (Fuente: Uruguay XXI)."),
      h4("4. Se depuran las exportaciones realizadas a zonas francas, entendiendo que se trata de insumos para los 
         procesos productivos de otros productos o de productos terminados, ya incorporados en los ajustes previos 
         (ej. exportaciones de madera a Zona Franca Nueva Palmira, insumo para la fabricación de celulosa)."), 
      br())
  })
  
  
  output$tablaNCM <- renderDataTable({
    columnLabels <- c("Código producto NCM a 4 dígitos",
                      "Descripción del código de producto a 4 dígitos.")
    datatable(
      ncm %>% 
        rename(Código = codigo,
               Descripción = descripcion),
      filter = "top",
      rownames = FALSE,
      options = list(
        ordering = FALSE,
        info = FALSE,
        lengthChange = FALSE,
        pagingType = "full",
        language = list(
          search= 'Filtrar: ',
          info = ' _START_ - _END_ (_TOTAL_)',
          paginate = list(first = 'Inicio', previous = 'Anterior', 
                          `next` = 'Siguiente', last = 'Fin')),
        columnDefs = 
          list(
            list(
              className = 'dt-center',
              targets = c(0)))),
      
        container = withTags(table(class = 'display', thead(tr(apply(data.frame(
          colnames=c("Código", "Descripción"),
          labels = columnLabels), 1, function(x) th(title=x[2], x[1])))))))
    })
  

  # config. plotly
  
  configuracion <- helpText("Utilice el cursor para ampliar el sector del gráfico de interés.", br(), br(), 
                            "Doble click sobre el gráfico para volver a visualización original.")
  
  output$conf1 <- renderUI({ 
    configuracion
  })
  output$conf2 <-  renderUI({ 
    configuracion
  })
  output$conf3 <-  renderUI({ 
    configuracion
  })
  output$conf4 <-  renderUI({ 
    configuracion
  })
  output$conf5 <-  renderUI({ 
    configuracion
  })
  output$conf6 <-  renderUI({ 
    configuracion
  })
  output$conf7 <-  renderUI({ 
    configuracion
  })
  
  }



# Run app
shinyApp(ui, server)
